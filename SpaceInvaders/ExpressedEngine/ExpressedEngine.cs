using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;using System.Drawing;using System.Windows.Forms;using System.Threading;namespace SpaceInvaders.ExpressedEngine{    /// <summary>    /// Canvas is used in order to refresh the canvas. windows forms doesn't do it automatically    /// </summary>    class Canvas : Form    {        public Canvas()        {            this.DoubleBuffered = true;        }    }    public abstract class ExpressedEngine    {        private Vector2 ScreenSize = new Vector2(512, 512);        private string Title = "New Game";        private Canvas Window = null;        private Thread GameLoopThread = null;        private static List<Shape2D> AllShapes = new List<Shape2D>();        public Color BackgroundColor;        public ExpressedEngine(Vector2 ScreenSize, string Title)        {            Log.Info("Game is starting...");            this.ScreenSize = ScreenSize;            this.Title = Title;            Window = new Canvas();            Window.Size = new Size((int)ScreenSize.X, (int)this.ScreenSize.Y);            Window.Text = this.Title;            Window.Paint += Renderer;            GameLoopThread = new Thread(GameLoop);            GameLoopThread.Start();            Application.Run(Window);        }        public static void RegisterShape(Shape2D shape)        {            AllShapes.Add(shape);        }        public static void UnRegisterShape(Shape2D shape)        {            AllShapes.Remove(shape);        }        void GameLoop()        {            OnLoad();            while (GameLoopThread.IsAlive)            {                try
                {
                    OnDraw();                    Window.BeginInvoke((MethodInvoker)delegate { Window.Refresh(); });                    OnUpdate();                    // this delay is needed in order for the windows to refresh,                    // otherwise willl refresh on the top of the previous state                    Thread.Sleep(1);
                }                catch
                {
                    Log.Error("Game has not been found.");
                }            }        }        private void Renderer(object sender, PaintEventArgs e)        {            Graphics g = e.Graphics;            // this will be our backgroud color and the first thing to draw            g.Clear(BackgroundColor);            foreach (Shape2D shape in AllShapes)            {                g.FillRectangle(new SolidBrush(Color.Red), shape.Position.X, shape.Position.Y, shape.Scale.X, shape.Scale.Y);            }        }        /// <summary>        /// here we load everything we need before the game starts        /// (sprites....)        /// </summary>        public abstract void OnLoad();        /// <summary>        /// anything regarding drawing should enter here        /// </summary>        public abstract void OnDraw();        /// <summary>        /// anything regarding movements, phisics should enter here        /// </summary>        public abstract void OnUpdate();    }}